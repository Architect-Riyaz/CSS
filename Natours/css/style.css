/* Making Animation */
@keyframes moveToRight {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(2rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveToLeft {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-2rem); }
  100% {
    opacity: 1;
    transform: translateX(0px); } }

@keyframes moveToUp {
  0% {
    opacity: 0;
    transform: translateY(6rem); }
  100% {
    opacity: 1;
    transform: translateY(0px); } }

*,
*::after,
*::before {
  margin: 0px;
  padding: 0px;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande", "Lucida Sans Unicode", Geneva, Verdana, sans-serif;
  font-weight: 40rem;
  font-size: 1.6rem;
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* Removes the default animation glitch */
  backface-visibility: hidden; }
  .heading-primary--main {
    display: block;
    /* top: 50%; */
    font-size: 6rem;
    font-weight: 40rem;
    letter-spacing: 3.5rem;
    /* Applying animation */
    animation-name: moveToRight;
    animation-duration: 2s;
    animation-timing-function: ease-out;
    /* animation-delay: 2s;     */
    /* animation-iteration-count: 3; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 40rem;
    letter-spacing: 1.75rem;
    animation: moveToLeft 2s ease-out;
    margin-bottom: 6rem;
    /* animation-name: moveToLeft;
        animation-duration: 3s;    
        animation-timing-function: ease-out; */ }

.btn {
  /* PSEUDO CLASSES */
  /* 
  PSEUDO ELEMENTS 
  So the trick here is to add an element that looks
  exactly like the button that we already have,
  But we put it behind the button
  It appears and comes forward when we hover on the button 
  And when we hover out of the button,
  Then this pseudo element goes back behind the button.
  */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 40rem;
    transition: all 0.2s;
    position: relative; }
  .btn:hover {
    transform: translateY(-0.3rem);
    /* box-shadow: X Y DEPTH rgba($color-black, .2); */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* to select the hidden btn behind the actual btn on hover state */ }
    .btn:hover::after {
      /* Double the size it has before */
      /* transform: scale(1.5); */
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.2);
    transform: translateY(-0.1rem); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white:after {
      background-color: #fff;
      color: #777; }
  .btn::after {
    /* We have to add this otherwise it won't appear */
    content: "";
    /* Inline block because the original button is also inline-block */
    display: inline-block;
    /* Both this 100% because this is been treated as the child elem for the original elem */
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0px;
    left: 0px;
    z-index: -1;
    transition: all 0.4s; }
  .btn--animated {
    animation: moveToUp 2s 0.75s;
    /* It will apply the 0% style in animation before the animation starts */
    animation-fill-mode: backwards; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right, rgba(126, 213, 111, 0.8), rgba(85, 197, 122, 0.8)), url("../img/bg.jpg");
  background-size: cover;
  background-position: center;
  clip-path: polygon(0% 0%, 100% 0%, 100% 70vh, 0% 100%);
  position: relative; }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.row {
  max-width: 114rem;
  display: block;
  margin: 0 auto;
  background-color: #eee; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    background-color: orangered;
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-3 {
    width: calc( 2* ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 *((100% - 3 * 6rem) / 4) + 2 * 6rem); }
